apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 5000
          env:
            - name: FLASK_ENV
              value: {{ .Values.env.FLASK_ENV | quote }}
            - name: API_BASE_URL
              valueFrom:
                secretKeyRef:
                  name: mt-app-secrets
                  key: API_BASE_URL
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mt-app-secrets
                  key: DB_PASSWORD
            - name: LOG_LEVEL
              valueFrom:
                secretKeyRef:
                  name: mt-app-secrets
                  key: LOG_LEVEL
            - name: MAX_CONNECTIONS
              valueFrom:
                secretKeyRef:
                  name: mt-app-secrets
                  key: MAX_CONNECTIONS
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: mt-app-secrets
                  key: SECRET_KEY
          livenessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 10
